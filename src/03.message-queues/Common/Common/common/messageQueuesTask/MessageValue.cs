// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.2
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace common.messageQueuesTask
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.2")]
	public partial class MessageValue : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"MessageValue\",\"namespace\":\"common.messageQueuesTask\",\"fi" +
				"elds\":[{\"name\":\"FileName\",\"type\":\"string\"},{\"name\":\"Content\",\"type\":\"bytes\"},{\"n" +
				"ame\":\"Position\",\"type\":\"int\"},{\"name\":\"ChunkSize\",\"type\":\"int\"}]}");
		private string _FileName;
		private byte[] _Content;
		private int _Position;
		private int _ChunkSize;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return MessageValue._SCHEMA;
			}
		}
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				this._FileName = value;
			}
		}
		public byte[] Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				this._Content = value;
			}
		}
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				this._Position = value;
			}
		}
		public int ChunkSize
		{
			get
			{
				return this._ChunkSize;
			}
			set
			{
				this._ChunkSize = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.FileName;
			case 1: return this.Content;
			case 2: return this.Position;
			case 3: return this.ChunkSize;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.FileName = (System.String)fieldValue; break;
			case 1: this.Content = (System.Byte[])fieldValue; break;
			case 2: this.Position = (System.Int32)fieldValue; break;
			case 3: this.ChunkSize = (System.Int32)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
